name: model-CD

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["model-ct"]
    branches: [main]
    types:
      - completed

jobs:
  evaluation:
    environment: dev
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}

    steps:
      - uses: actions/checkout@v2

      - name: Load environment from YAML
        uses: doughepi/yaml-env-action@v1.0.0
        with:
            files: .github/variables.yaml

      - id: job_preparation
        name: Installing dependencies
        uses: ./.github/actions/aml-cli-install
        with:
          componentSupport: false
          minVersion: 2.0
          pythonTools: true

      - name: Logining in into Azure
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Computing McNemar statistic
        id: jobRun
        uses: ./.github/actions/aml-job-create
        with:
          name: ${{ env.MODELNAME }}-eval
          jobFile: .aml/jobs/hatedetection/evaluate.job.yml
          useGitMessageForName: false
          workspaceName: ${WORKSPACENAME}
          resourceGroup: ${RESOURCEGROUPNAME}
          noWait: false
      
      - name: Verifying evaluation
        uses: ./.github/actions/aml-job-metric-assert
        id: jobMetricAssert
        with:
          jobName: ${{ steps.jobRun.outputs.jobName }}
          metric: pvalue
          expecting: 0.05
          dataType: float
          greaterIsBetter: false
          workspaceName: ${WORKSPACENAME}
          resourceGroup: ${RESOURCEGROUPNAME}
          failureMessage: Unable to conclude if challenger is better than champion
      
      - name: Comparing models
        id: compare
        uses: ./.github/actions/aml-model-compare
        if: ${{ steps.jobMetricAssert.outputs.result == 'true' }}
        with:
          modelName: ${MODELNAME}
          champion: stage=production
          challenger: latest
          endpoint: .aml/endpoints/${MODELNAME}/endpoint.yml
          compareBy: eval_recall
          workspaceName: ${WORKSPACENAME}
          resourceGroup: ${RESOURCEGROUPNAME}

      - name: Moving model's stage
        uses: ./.github/actions/aml-model-set
        if: ${{ steps.compare.outputs.result == 'true' }}
        with:
          modelName: ${MODELNAME}
          modelVersion: latest
          property: stage
          value: staged
          exclusive: true
          replaceExistingWith: unstaged
          workspaceName: ${WORKSPACENAME}
          resourceGroup: ${RESOURCEGROUPNAME}

    outputs:
      result: ${{ steps.compare.outputs.result }}
      winning: ${{ steps.compare.outputs.winning }}

  deployment:
    environment: amlworkspace_dev
    runs-on: ubuntu-latest
    needs: evaluation
    if: ${{ needs.evaluation.outputs.result == 'true' }}

    steps:
      - uses: actions/checkout@v2

      - name: Load environment from YAML
        uses: doughepi/yaml-env-action@v1.0.0
        with:
            files: .github/variables.yaml

      - id: job_preparation
        name: Installing dependencies
        uses: ./.github/actions/aml-cli-install
        with:
          componentSupport: false
          minVersion: 2.0
          pythonTools: true

      - name: Logining in into Azure
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Moving model's stage
        uses: ./.github/actions/aml-model-set
        with:
          modelName: ${MODELNAME}
          modelVersion: ${{ needs.evaluation.outputs.winning }}
          property: stage
          value: production
          exclusive: true
          isMlflowStage: true
          replaceExistingWith: archived
          workspaceName: ${WORKSPACENAME}
          resourceGroup: ${RESOURCEGROUPNAME}
      
      - name: Deploying models
        id: deployment
        uses: ./.github/actions/aml-endpoint-deploy
        with:
          endpointFile: .aml/endpoints/*/endpoint.yml
          deploymentFile: deployments/*.yml
          modelVersion: ${{ needs.evaluation.outputs.winning }}
          workspaceName: ${WORKSPACENAME}
          resourceGroup: ${RESOURCEGROUPNAME}
          secretsToKeyVault: true
          keyVaultName: ${KEYVAULTNAME}

  